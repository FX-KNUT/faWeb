{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\fxWeb\\\\src\\\\components\\\\Location.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { store } from \"./App.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nconst Location = () => {\n  _s();\n\n  const [center, setCenter] = useState([36.96911947843944, 127.8696547175743]);\n  let lat = center[0];\n  let lon = center[1];\n  const [searchCenter, setSearchCenter] = useState([]);\n  useEffect(() => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new kakao.maps.LatLng(lat, lon),\n      level: 3\n    };\n    const map = new window.kakao.maps.Map(container, options); // marker\n\n    let markerPosition = new kakao.maps.LatLng(lat, lon);\n    let marker = new kakao.maps.Marker({\n      position: markerPosition\n    });\n    marker.setMap(map); // 일반 지도와 스카이뷰로 지도 타입을 전활할 수 있는 지도 타입 컨트롤 생성\n\n    const mapTypeControl = new kakao.maps.MapTypeControl();\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT); // 지도 확대 축소를 제어할 수 있는 줌 컨트롤 생성\n\n    const zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n  }, []);\n  store.dispatch({\n    type: {\n      loc: \"location\"\n    }\n  }); // Google Map API는 유료이지만, Kakao API를 사용하면 무료입니다.\n  // 동시에 아주 간단하게 구현할 수 있습니다.\n  // 백엔드 단에서 로직을 구현하여 정보를 받아올지,\n  // 프론트엔드 단에서 로직을 구현하여 직접 띄울지 회의해보세요.\n  // 백엔드 단의 사람이 더 많다면 백엔드 쪽에서 위도와 경도를 얻어서\n  // 전달하고 프론트엔드 단에서 위도와 경도를 기반으로 위치를 보여주는 것도\n  // 분명히 비효율적인 방법이지만 엄연히 데이터 통신을 하는 것이므로\n  // 그 과정속에 REST API 통신, 외부 API 사용을 통한 CORS 등의 이해를\n  // 얻게 될 겁니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-location-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-location-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        className: \"main-location-map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uCD9C\\uBC1C\\uC9C0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: searchCenter,\n          onChange: e => setSearchCenter(e.target.value),\n          name: \"searchCenter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \"\\uB3C4\\uCC29\\uC9C0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"center\",\n          onChange: e => setCenter(e.target.value),\n          value: center\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Location, \"lxSlRrzAJ66HIOmTxWeU2keMUG8=\");\n\n_c = Location;\nexport default Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["D:/Project/fxWeb/src/components/Location.js"],"names":["useEffect","useState","store","kakao","window","Location","center","setCenter","lat","lon","searchCenter","setSearchCenter","container","document","getElementById","options","maps","LatLng","level","map","Map","markerPosition","marker","Marker","position","setMap","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","dispatch","type","loc","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { store } from \"./App.tsx\";\r\nconst { kakao } = window;\r\n\r\nconst Location = () => {\r\n  const [center, setCenter] = useState([36.96911947843944, 127.8696547175743]);\r\n  let lat = center[0];\r\n  let lon = center[1];\r\n  const [searchCenter, setSearchCenter] = useState([]);\r\n  useEffect(() => {\r\n    let container = document.getElementById(\"map\");\r\n    let options = {\r\n      center: new kakao.maps.LatLng(lat, lon),\r\n      level: 3,\r\n    };\r\n\r\n    const map = new window.kakao.maps.Map(container, options);\r\n\r\n    // marker\r\n    let markerPosition = new kakao.maps.LatLng(lat, lon);\r\n    let marker = new kakao.maps.Marker({\r\n      position: markerPosition,\r\n    });\r\n\r\n    marker.setMap(map);\r\n\r\n    // 일반 지도와 스카이뷰로 지도 타입을 전활할 수 있는 지도 타입 컨트롤 생성\r\n    const mapTypeControl = new kakao.maps.MapTypeControl();\r\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n\r\n    // 지도 확대 축소를 제어할 수 있는 줌 컨트롤 생성\r\n    const zoomControl = new kakao.maps.ZoomControl();\r\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n  }, []);\r\n\r\n  store.dispatch({ type: { loc: \"location\" } });\r\n  // Google Map API는 유료이지만, Kakao API를 사용하면 무료입니다.\r\n  // 동시에 아주 간단하게 구현할 수 있습니다.\r\n  // 백엔드 단에서 로직을 구현하여 정보를 받아올지,\r\n  // 프론트엔드 단에서 로직을 구현하여 직접 띄울지 회의해보세요.\r\n  // 백엔드 단의 사람이 더 많다면 백엔드 쪽에서 위도와 경도를 얻어서\r\n  // 전달하고 프론트엔드 단에서 위도와 경도를 기반으로 위치를 보여주는 것도\r\n  // 분명히 비효율적인 방법이지만 엄연히 데이터 통신을 하는 것이므로\r\n  // 그 과정속에 REST API 통신, 외부 API 사용을 통한 CORS 등의 이해를\r\n  // 얻게 될 겁니다.\r\n  return (\r\n    <div className=\"main-location-wrapper\">\r\n      <div className=\"main-location-content\">\r\n        <div id=\"map\" className=\"main-location-map\"></div>\r\n        <div>\r\n          출발지\r\n          <input\r\n            value={searchCenter}\r\n            onChange={(e) => setSearchCenter(e.target.value)}\r\n            name=\"searchCenter\"\r\n          ></input>\r\n          도착지\r\n          <input\r\n            name=\"center\"\r\n            onChange={(e) => setCenter(e.target.value)}\r\n            value={center}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Location;\r\n"]},"metadata":{},"sourceType":"module"}