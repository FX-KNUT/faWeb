{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\fxWeb\\\\src\\\\components\\\\ProfileList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { store } from \"./App.tsx\";\nimport Pagination from \"./Pagination\";\nimport Profile from \"./Profile\";\nimport ProfilePage from \"./ProfilePage\";\nimport shine from \"./res/image/shine.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst profileList = [{\n  idx: 0,\n  id: \"1234567\",\n  name: \"김김김\",\n  img: shine,\n  start_date: \"2021-01-01\",\n  end_date: \"2021-12-31\"\n}, {\n  idx: 1,\n  id: \"1234567\",\n  name: \"김김김\",\n  img: shine,\n  start_date: \"2021-01-01\",\n  end_date: \"2021-12-31\"\n}, {\n  idx: 2,\n  id: \"1234567\",\n  name: \"김김김\",\n  img: shine,\n  start_date: \"2021-01-01\",\n  end_date: \"2021-12-31\"\n}, {\n  idx: 3,\n  id: \"1234567\",\n  name: \"김김김\",\n  img: shine,\n  start_date: \"2021-01-01\",\n  end_date: \"2021-12-31\"\n}, {\n  idx: 4,\n  id: \"1234567\",\n  name: \"김김김\",\n  img: shine,\n  start_date: \"2021-01-01\",\n  end_date: \"2021-12-31\"\n}, {\n  idx: 5,\n  id: \"1234567\",\n  name: \"김김김\",\n  img: shine,\n  start_date: \"2021-01-01\",\n  end_date: \"2021-12-31\"\n}, {\n  idx: 6,\n  id: \"1234567\",\n  name: \"김김김\",\n  img: shine,\n  start_date: \"2021-01-01\",\n  end_date: \"2021-12-31\"\n}];\n\nconst ProfileList = () => {\n  _s();\n\n  store.dispatch({\n    type: {\n      loc: \"profile\"\n    }\n  }); // pagination 관련\n\n  const maxProfileList = 6; // 한 페이지에서 보여줄 최대 profile 개수\n\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지\n\n  const [loading, setLoading] = useState(false); // 서버에서 ProfileList를 가져올 때 loading을 하고 있냐 아니냐\n\n  const indexOfLast = currentPage * maxProfileList; // 현재 페이지에서 있을 수 있는 마지막 index\n\n  const indexOfFirst = indexOfLast - maxProfileList; // 현재 페이지에서 있을 수 있는 처음 index\n  // arr의 map 함수 내 _는 ele 인자를 사용하지 않겠다는 것을\n  // 암시적으로 나타내는 minify입니다. 일종의 convention이니,\n  // 익혀두시면 다음에 다른 코드를 볼 때 또 보실 일이 있을 겁니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-profile-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-profile-content\",\n      children: [profileList.map(profile => /*#__PURE__*/_jsxDEV(Profile, {\n        profile: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ProfilePage, {\n        currProfileList: currProfileList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      maxProfileList: maxProfileList,\n      totalProfile: profileList.length,\n      paginate: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileList, \"wz3cPGHXyojj6RILunFxdtDcd68=\");\n\n_c = ProfileList;\nexport default ProfileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileList\");","map":{"version":3,"sources":["D:/Project/fxWeb/src/components/ProfileList.js"],"names":["useEffect","useState","store","Pagination","Profile","ProfilePage","shine","profileList","idx","id","name","img","start_date","end_date","ProfileList","dispatch","type","loc","maxProfileList","currentPage","setCurrentPage","loading","setLoading","indexOfLast","indexOfFirst","map","profile","currProfileList","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { store } from \"./App.tsx\";\r\nimport Pagination from \"./Pagination\";\r\nimport Profile from \"./Profile\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport shine from \"./res/image/shine.png\";\r\n\r\nconst profileList = [\r\n  {\r\n    idx: 0,\r\n    id: \"1234567\",\r\n    name: \"김김김\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 1,\r\n    id: \"1234567\",\r\n    name: \"김김김\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 2,\r\n    id: \"1234567\",\r\n    name: \"김김김\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 3,\r\n    id: \"1234567\",\r\n    name: \"김김김\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 4,\r\n    id: \"1234567\",\r\n    name: \"김김김\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 5,\r\n    id: \"1234567\",\r\n    name: \"김김김\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 6,\r\n    id: \"1234567\",\r\n    name: \"김김김\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n];\r\n\r\nconst ProfileList = () => {\r\n  store.dispatch({ type: { loc: \"profile\" } });\r\n\r\n  // pagination 관련\r\n  const maxProfileList = 6; // 한 페이지에서 보여줄 최대 profile 개수\r\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지\r\n  const [loading, setLoading] = useState(false); // 서버에서 ProfileList를 가져올 때 loading을 하고 있냐 아니냐\r\n  const indexOfLast = currentPage * maxProfileList; // 현재 페이지에서 있을 수 있는 마지막 index\r\n  const indexOfFirst = indexOfLast - maxProfileList; // 현재 페이지에서 있을 수 있는 처음 index\r\n\r\n  // arr의 map 함수 내 _는 ele 인자를 사용하지 않겠다는 것을\r\n  // 암시적으로 나타내는 minify입니다. 일종의 convention이니,\r\n  // 익혀두시면 다음에 다른 코드를 볼 때 또 보실 일이 있을 겁니다.\r\n\r\n  return (\r\n    <div className=\"main-profile-wrapper\">\r\n      {/* {loading && <div>loading...</div>} */}\r\n      {/** 나중에 profileList를 받아올 때 대비 */}\r\n      <div className=\"main-profile-content\">\r\n        {profileList.map((profile) => (\r\n          <Profile profile={profile} />\r\n        ))}\r\n        <ProfilePage currProfileList={currProfileList} />\r\n      </div>\r\n      <Pagination\r\n        maxProfileList={maxProfileList}\r\n        totalProfile={profileList.length}\r\n        paginate={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileList;\r\n"]},"metadata":{},"sourceType":"module"}