{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC2E0\\uC774\\uC885\\\\Desktop\\\\Univ\\\\OneDrive\\\\2021. 1\\uD559\\uAE30\\\\fxsite\\\\fxweb\\\\src\\\\components\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { SERVERURL, SERVERPORT } from './Constants'; // import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // destructuring에 따른 Typing 방법\n  let [id, setId] = useState('');\n  let [pw, setPw] = useState(''); // Union Type, | 를 사용하여 이 타입 중 하나일 것임을 명시\n  // HTMLElement의 경우 로딩 시점에 따라 null로 인식될 수 있으므로 null까지 포함해야 함\n\n  const modal = document.querySelector(\"#modal\");\n  const login = document.querySelector(\"#login\");\n  const btnStyle = {\n    // 이런 객체엔 Typing하지 않아도 됩니다.\n    color: \"white\",\n    background: \"purple\",\n    padding: \".375rem .75rem\",\n    border: \"1px solid purple\",\n    borderRadius: \".25rem\",\n    fontSize: \"1rem\",\n    lineHeight: 1.5\n  }; // 객체의 타입을 다 외울 필요 없습니다.\n  // 아래의 onIDChange를 예로 들면, onIDChange 이벤트가 걸려있는\n  // DOM에 마우스를 올려 해당 객체의 타입이 무엇인지 확인하면 쉽게 알 수 있습니다.\n\n  const onIDChange = e => {\n    setId(e.target.value);\n  };\n\n  const onPasswordChange = e => {\n    setPw(e.target.value);\n  };\n\n  const onXClicked = e => {\n    e.preventDefault();\n    modal === null || modal === void 0 ? void 0 : modal.classList.toggle(\"show\");\n    login === null || login === void 0 ? void 0 : login.classList.toggle(\"show\");\n  };\n\n  const requsetUserInfo = async DTO => {\n    const res = await axios.get(`${SERVERURL}:${SERVERPORT}`);\n  }; // 패키지에 axios 설치 되어 있습니다. axios 사용하세요.\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"login-header\",\n        className: \"login-p\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onXClicked,\n        id: \"login-X_Btn\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"login-id\",\n        className: \"login-p\",\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: id,\n        className: \"login-input\",\n        onChange: onIDChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"login-pw\",\n        className: \"login-p\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"\",\n        id: \"\",\n        className: \"login-input\",\n        value: pw,\n        onChange: onPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"login-submitBtn\",\n        style: btnStyle,\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"P0uk7fBfdJQ+wiciNIupfoiAab8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/신이종/Desktop/Univ/OneDrive/2021. 1학기/fxsite/fxweb/src/components/Login.tsx"],"names":["useState","SERVERURL","SERVERPORT","Login","id","setId","pw","setPw","modal","document","querySelector","login","btnStyle","color","background","padding","border","borderRadius","fontSize","lineHeight","onIDChange","e","target","value","onPasswordChange","onXClicked","preventDefault","classList","toggle","requsetUserInfo","DTO","res","axios","get","onSubmit"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport {SERVERURL, SERVERPORT} from './Constants';\r\n// import axios from 'axios';\r\n\r\nconst Login = (): JSX.Element => {\r\n\r\n    // destructuring에 따른 Typing 방법\r\n    let [id, setId]: [ id: string, setId: Function] = useState('');\r\n    let [pw, setPw]: [ pw: string, setPw: Function] = useState('');\r\n\r\n    // Union Type, | 를 사용하여 이 타입 중 하나일 것임을 명시\r\n    // HTMLElement의 경우 로딩 시점에 따라 null로 인식될 수 있으므로 null까지 포함해야 함\r\n    const modal: HTMLElement | null = document.querySelector(\"#modal\");\r\n    const login: HTMLElement | null = document.querySelector(\"#login\");\r\n\r\n    const btnStyle = {  // 이런 객체엔 Typing하지 않아도 됩니다.\r\n        color: \"white\",\r\n        background: \"purple\",\r\n        padding: \".375rem .75rem\",\r\n        border: \"1px solid purple\",\r\n        borderRadius: \".25rem\",\r\n        fontSize: \"1rem\",\r\n        lineHeight: 1.5\r\n    };\r\n\r\n    // 객체의 타입을 다 외울 필요 없습니다.\r\n    // 아래의 onIDChange를 예로 들면, onIDChange 이벤트가 걸려있는\r\n    // DOM에 마우스를 올려 해당 객체의 타입이 무엇인지 확인하면 쉽게 알 수 있습니다.\r\n\r\n    const onIDChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setId(e.target.value)\r\n    };\r\n\r\n    const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setPw(e.target.value)\r\n    };\r\n\r\n    const onXClicked = (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n        e.preventDefault();\r\n        modal?.classList.toggle(\"show\");\r\n        login?.classList.toggle(\"show\");\r\n    };\r\n\r\n    const requsetUserInfo = async (DTO: UserDTO) => {\r\n        const res = await axios.get(`${SERVERURL}:${SERVERPORT}`);\r\n    }\r\n\r\n    // 패키지에 axios 설치 되어 있습니다. axios 사용하세요.\r\n    const onSubmit = (e: React.ChangeEvent<HTMLFormElement>): void => {\r\n        e.preventDefault();\r\n        \r\n    }\r\n\r\n    return (\r\n        <div id=\"login-wrapper\">\r\n            <form action=\"\" method=\"post\" onSubmit={onSubmit}>\r\n                <p id=\"login-header\" className=\"login-p\">로그인</p>\r\n                <button onClick={onXClicked} id=\"login-X_Btn\">X</button>\r\n                <p id=\"login-id\" className=\"login-p\">ID</p>\r\n                <input type=\"text\" value={id} className=\"login-input\" onChange={onIDChange} />    \r\n                <p id=\"login-pw\" className=\"login-p\">Password</p>\r\n                <input type=\"password\" name=\"\" id=\"\" className=\"login-input\" value={pw} onChange={onPasswordChange} />\r\n                <button id=\"login-submitBtn\" style={btnStyle} type=\"submit\">Sign In</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}