{"version":3,"sources":["components/Header.js","components/Reducer.ts","components/Home.js","components/Profile.js","components/Introduction.js","components/Location.js","components/Community.js","components/Router.js","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","id","href","reducer","state","loc","action","type","Home","store","dispatch","className","Profile","arr","Content","key","page","console","log","map","_","idx","Introduction","Location","Community","AppRouter","exact","path","createStore","App","useState","init","setInit","changeHandler","getState","document","querySelector","subscribe","useEffect","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4NA2BeA,EA3BA,WACb,OACE,8BACE,iCACE,mBAAGC,GAAG,UACN,+BACE,6BACE,mBAAGC,KAAK,IAAR,oBAEF,6BACE,mBAAGA,KAAK,iBAAR,4BAEF,6BACE,mBAAGA,KAAK,YAAR,uBAEF,6BACE,mBAAGA,KAAK,aAAR,wBAEF,6BACE,mBAAGA,KAAK,cAAR,kCCcGC,EAvBC,WAAsD,IAArDC,EAAoD,uDAArC,CAACC,IAAK,IAAKC,EAA0B,uCACnE,OAAQA,EAAOC,KAAKF,KAClB,IAAK,OAEH,OADAD,EAAMC,IAAM,OACLD,EACT,IAAK,eAEH,OADAA,EAAMC,IAAM,eACLD,EACT,IAAK,UAEH,OADAA,EAAMC,IAAM,UACLD,EACT,IAAK,WAEH,OADAA,EAAMC,IAAM,WACLD,EACT,IAAK,YAEH,OADAA,EAAMC,IAAM,YACLD,EAIX,OAAOA,G,eCJMI,EAxBF,WAGX,OAFAC,EAAMC,SAAS,CAAEH,KAAM,CAAEF,IAAK,UAG5B,sBAAKM,UAAU,oBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,gCACE,uEACA,uHACA,gGACA,8DAGJ,qBAAKA,UAAU,oBAAf,SACE,gCACE,wGACA,oHACA,uFC2CKC,EA5DC,WACdH,EAAMC,SAAS,CAAEH,KAAM,CAAEF,IAAK,aAE9B,IACIQ,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEpBC,EAAU,SAACC,GAAD,OACd,wBAAOJ,UAAU,6BAAjB,UACE,uBAAOA,UAAU,6BAA6BK,KALvC,EAKmDf,GAAIc,EAA9D,SACE,+BACE,oBAAIJ,UAAU,gCAAd,qBACA,oBAAIA,UAAU,kCAAd,qCAGJ,uBAAOA,UAAU,6BAA6BK,KAXvC,EAWmDf,GAAIc,EAA9D,SACE,6BACE,oBAAIJ,UAAU,iCAAd,oCAGJ,wBAAOA,UAAU,6BAA6BK,KAhBvC,EAgBmDf,GAAIc,EAA9D,UACE,+BACE,oBAAIJ,UAAU,mCAAd,gCACA,oBAAIA,UAAU,wCAAd,2BAEF,+BACE,oBAAIA,UAAU,iCAAd,gCACA,oBAAIA,UAAU,sCAAd,kCAaR,OAPAM,QAAQC,IAAIJ,GACZG,QAAQC,IAAIL,GAOV,sBAAKF,UAAU,uBAAf,UACE,qBAAKA,UAAU,uBAAf,SACGE,EAAIM,KAAI,SAACC,EAAGC,GAAJ,OACP,cAACP,EAAD,GAAcO,QAGlB,sBAAKV,UAAU,0BAAf,UACE,wBAAQA,UAAU,gCAAlB,sCACA,qBAAIA,UAAU,6BAAd,UACE,mCACA,mCACA,mCACA,sCAEF,wBAAQA,UAAU,8BAAlB,uCC1COW,EAZM,WAGnB,OAFAb,EAAMC,SAAS,CAAEH,KAAM,CAAEF,IAAK,kBAG5B,qBAAKM,UAAU,4BAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,qECMOY,EAZE,WAGf,OAFAd,EAAMC,SAAS,CAAEH,KAAM,CAAEF,IAAK,cAG5B,qBAAKM,UAAU,wBAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,qEC0BOa,EAhCG,WAGhB,OAFAf,EAAMC,SAAS,CAAEH,KAAM,CAAEF,IAAK,eAG5B,sBAAKM,UAAU,yBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,sBAAMA,UAAU,8BAAhB,oDACA,sBAAKA,UAAU,uBAAf,UACE,sDACA,iEACA,oEAEF,sBAAKA,UAAU,2BAAf,UACE,kDACA,kDACA,wDAGJ,sBAAKA,UAAU,4BAAf,UACE,wBAAQA,UAAU,kCAAlB,sCACA,qBAAIA,UAAU,+BAAd,UACE,mCACA,mCACA,mCACA,sCAEF,wBAAQA,UAAU,gCAAlB,uCCCOc,EAtBG,WAChB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,UChBKlB,EAAQmB,YAAYzB,GAmClB0B,MAjCf,WAEE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQMC,EANa,WACjB,IAAQ5B,EAAQI,EAAMyB,WAAd7B,IACI8B,SAASC,cAAc,QAC9BzB,UAAY,OAASN,GAc5B,OAPAI,EAAM4B,UAAUJ,GAEhBK,qBAAU,WAERN,GAAQ,KACP,IAGD,sBAAK/B,GAAG,MAAMU,UAAU,MAAxB,UACE,iCACE,cAAC,EAAD,MAEF,+BACGoB,EAAO,aAAe,cAACQ,EAAD,U,QCtBhBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU1C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ0B,SAASiB,eAAe,SAM1BZ,M","file":"static/js/main.9b0f292b.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <nav>\r\n      <span>\r\n        <p id=\"nav_p\"></p>\r\n        <ul>\r\n          <li>\r\n            <a href=\".\">Home</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/introduction\">Introduction</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/profile\">Profile</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/location\">Location</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/community\">Community</a>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","interface state {\r\n  loc: string\r\n}\r\n\r\ninterface action {\r\n  type: {\r\n    loc: string\r\n  }\r\n}\r\n\r\nconst reducer = (state: state = {loc: ''}, action: action): state => {\r\n  switch (action.type.loc) {\r\n    case \"home\":\r\n      state.loc = 'home';\r\n      return state;\r\n    case \"introduction\":\r\n      state.loc = 'introduction';\r\n      return state;\r\n    case \"profile\":\r\n      state.loc = 'profile';\r\n      return state;\r\n    case \"location\":\r\n      state.loc = 'location';\r\n      return state;\r\n    case \"community\":\r\n      state.loc = 'community';\r\n      return state;\r\n    default:\r\n      // nothing\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { store } from './App';\r\n\r\nconst Home = () => {\r\n  store.dispatch({ type: { loc: 'home' } });\r\n\r\n  return (\r\n    <div className=\"main-home-wrapper\">\r\n      <div className=\"main-home-header\">\r\n        <pre>\r\n          <h2>안녕하십니까!</h2>\r\n          <h3>한국교통대학교 소프트웨어학과</h3>\r\n          <h3>웹 어플리케이션 동아리</h3>\r\n          <h2>f(x)입니다.</h2>\r\n        </pre>\r\n      </div>\r\n      <div className=\"main-home-content\">\r\n        <pre>\r\n          <h2>하루를 잘 보내고 계신가요?</h2>\r\n          <h3>날씨가 많이 더워지고 있습니다.</h3>\r\n          <h4>감기 조심하세요.</h4>\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { store } from './App';\r\n\r\nconst Profile = () => {\r\n  store.dispatch({ type: { loc: 'profile' } });\r\n\r\n  let page = 1;\r\n  let arr = [1, 2, 3, 4, 5, 6];\r\n\r\n  const Content = (key) => (\r\n    <table className=\"main-profile-content-table\">\r\n      <thead className=\"main-profile-content-thead\" page={page} id={key}>\r\n        <tr>\r\n          <td className=\"main-profile-content-thead-id\">1444018</td>\r\n          <td className=\"main-profile-content-thead-name\">신이종</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"main-profile-content-tbody\" page={page} id={key}>\r\n        <tr>\r\n          <td className=\"main-profile-content-tbody-img\">이미지</td>\r\n        </tr>\r\n      </tbody>\r\n      <tfoot className=\"main-profile-content-tfoot\" page={page} id={key}>\r\n        <tr>\r\n          <td className=\"main-profile-content-tfoot-start\">가입일</td>\r\n          <td className=\"main-profile-content-tfoot-start-date\">2021-06-02</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"main-profile-content-tfoot-end\">탈퇴일</td>\r\n          <td className=\"main-profile-content-tfoot-end-date\">2021-06-03</td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n\r\n  console.log(Content);\r\n  console.log(arr);\r\n\r\n  // arr의 map 함수 내 _는 ele 인자를 사용하지 않겠다는 것을\r\n  // 암시적으로 나타내는 minify입니다. 일종의 convention이니,\r\n  // 익혀두시면 다음에 다른 코드를 볼 때 또 보실 일이 있을 겁니다.\r\n\r\n  return (\r\n    <div className=\"main-profile-wrapper\">\r\n      <div className=\"main-profile-content\">\r\n        {arr.map((_, idx) => (\r\n          <Content key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"main-profile-pagination\">\r\n        <button className=\"main-profile-pagination-start\">처음으로</button>\r\n        <ul className=\"main-profile-pagination-ul\">\r\n          <li>1</li>\r\n          <li>2</li>\r\n          <li>3</li>\r\n          <li>4</li>\r\n        </ul>\r\n        <button className=\"main-profile-pagination-end\">끝으로</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { store } from './App';\r\n\r\nconst Introduction = () => {\r\n  store.dispatch({ type: { loc: 'introduction' } });\r\n\r\n  return (\r\n    <div className=\"main-introduction-wrapper\">\r\n      <div className=\"main-introduction-content\">\r\n        <p>소개입니다.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Introduction;\r\n","import { store } from './App';\r\n\r\nconst Location = () => {\r\n  store.dispatch({ type: { loc: 'location' } });\r\n\r\n  return (\r\n    <div className=\"main-location-wrapper\">\r\n      <div className=\"main-location-content\">\r\n        <p>장소입니다.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import { store } from './App';\r\n\r\nconst Community = () => {\r\n  store.dispatch({ type: { loc: 'community' } });\r\n\r\n  return (\r\n    <div className=\"main-community-wrapper\">\r\n      <div className=\"main-community-content\">\r\n        <span className=\"main-community-content-span\">전체 게시글: 0 / 0</span>\r\n        <div className=\"main-community-posts\">\r\n          <div>이 안에</div>\r\n          <div>게시글들을</div>\r\n          <div>넣어주세요</div>\r\n        </div>\r\n        <div className=\"main-community-functions\">\r\n          <button>등록</button>\r\n          <button>수정</button>\r\n          <button>삭제</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-community-pagination\">\r\n        <button className=\"main-community-pagination-start\">처음으로</button>\r\n        <ul className=\"main-community-pagination-ul\">\r\n          <li>1</li>\r\n          <li>2</li>\r\n          <li>3</li>\r\n          <li>4</li>\r\n        </ul>\r\n        <button className=\"main-community-pagination-end\">끝으로</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n","import { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Home from './Home.js';\r\nimport Profile from './Profile.js';\r\nimport Introduction from './Introduction.js';\r\nimport Location from './Location.js';\r\nimport Community from './Community.js';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      <Route exact path=\"/introduction\">\r\n        <Introduction />\r\n      </Route>\r\n      <Route exact path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n      <Route exact path=\"/location\">\r\n        <Location />\r\n      </Route>\r\n      <Route exact path=\"/community\">\r\n        <Community />\r\n      </Route>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import './App.css';\nimport { createStore } from 'redux';\nimport Header from './Header.js';\nimport reducer from './Reducer';\nimport Router from \"./Router.js\";\nimport { useEffect, useState } from 'react';\n\nexport const store = createStore(reducer);\n\nfunction App() : JSX.Element {\n\n  const [init, setInit] = useState(true);\n\n  const locChanged = () => {\n    const { loc } = store.getState();\n    const App = document.querySelector(\".App\");\n    App!.className = \"App \" + loc;\n  };\n\n  const changeHandler = {\n    locChangeHandler: locChanged\n  };\n\n  store.subscribe(changeHandler.locChangeHandler);\n\n  useEffect(() => {\n    /* ~~ */\n    setInit(false);\n  }, []);\n\n  return (\n    <div id=\"App\" className=\"App\">\n      <header>\n        <Header />\n      </header>\n      <main>\n        {init ? \"Loading...\" : <Router />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App, {store} from './components/App';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}