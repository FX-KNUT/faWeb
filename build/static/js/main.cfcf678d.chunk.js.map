{"version":3,"sources":["components/Header.js","components/Reducer.ts","components/Home.js","components/ProfilePagination.js","components/Profile.js","components/ProfilePage.js","components/res/image/shine.png","components/ProfileList.js","components/Introduction.js","components/Location.js","components/CommunityPagination.js","components/CommunityPostlist.js","components/Community.js","components/NotFound.js","components/CommunityWrite.js","components/Comment.js","components/Post.js","components/Login.tsx","components/Signup.js","components/Router.js","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["category","name","text","Header","className","map","c","to","activeClassName","reducer","state","loc","loggedIn","action","type","Home","store","dispatch","ProfilePagination","maxProfileList","totalProfile","setCurrentPage","pageNumbers","i","Math","ceil","push","onClick","e","target","tagName","innerText","number","nav_color","Profile","profile","idx","id","img","start_date","end_date","backgroundColor","length","style","src","alt","ProfilePage","currProfileList","profileList","shine","ProfileList","tmp","useState","currentPage","indexOfLast","indexOfFirst","slice","Introduction","href","kakao","window","Location","center","useEffect","container","document","getElementById","options","maps","LatLng","level","Map","markerPosition","marker","Marker","position","setMap","InfoWindow","content","open","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","relayout","CommunityPagination","maxPostList","totalPosts","CommunityPostlist","currPostList","history","post","title","author","date","postList","Community","NotFound","CommunityWrite","setTitle","setContent","file","setFile","method","onSubmit","preventDefault","htmlFor","value","onChange","rows","multiple","Comment","comment","setComment","placeholder","Post","location","qs","parse","search","ignoreQueryPrefix","console","log","disabled","Login","setId","pw","setPw","Signup","image","setName","setStartDate","setEndDate","setImg","backgorundColor","setBackgroundColor","backColor","AppRouter","exact","path","component","createStore","App","init","setInit","changeHandler","getState","querySelector","subscribe","toggle_header","header","addEventListener","classList","toggle","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.cfcf678d.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst category = [\r\n  {\r\n    name: \"fxweb\",\r\n    text: \"Home\",\r\n  },\r\n  {\r\n    name: \"introduction\",\r\n    text: \"Introduction\",\r\n  },\r\n  {\r\n    name: \"profile\",\r\n    text: \"Profile\",\r\n  },\r\n  {\r\n    name: \"location\",\r\n    text: \"Location\",\r\n  },\r\n  {\r\n    name: \"community\",\r\n    text: \"Community\",\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"categoryBox\">\r\n      {category.map((c) => (\r\n        <NavLink\r\n          to={c.name}\r\n          className=\"category\"\r\n          key={c.name}\r\n          activeClassName=\"active\"\r\n        >\r\n          {c.text}\r\n        </NavLink>\r\n      ))}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","interface state {\r\n  loc: string; // header\r\n  loggedIn: boolean; // 로그인 여부.\r\n}\r\n\r\ninterface action {\r\n  type: Record<Type, string>;\r\n}\r\n\r\ntype Type = \"loc\" | \"loggedIn\";\r\n\r\nconst reducer = (\r\n  state: state = {\r\n    loc: \"\",\r\n    loggedIn: false,\r\n  },\r\n  action: action\r\n): state => {\r\n  switch (action.type.loggedIn) {\r\n    case \"true\":\r\n      state.loggedIn = true;\r\n      return state;\r\n    case \"false\":\r\n      state.loggedIn = false;\r\n      return state;\r\n    default:\r\n    // nothing\r\n  }\r\n  switch (action.type.loc) {\r\n    case \"home\":\r\n      state.loc = \"home\";\r\n      return state;\r\n    case \"introduction\":\r\n      state.loc = \"introduction\";\r\n      return state;\r\n    case \"profile\":\r\n      state.loc = \"profile\";\r\n      return state;\r\n    case \"location\":\r\n      state.loc = \"location\";\r\n      return state;\r\n    case \"community\":\r\n      state.loc = \"community\";\r\n      return state;\r\n    case \"login\":\r\n      state.loc = \"login\";\r\n      return state;\r\n    case \"signup\":\r\n      state.loc = \"signup\";\r\n      return state;\r\n    case \"post\":\r\n      state.loc = \"post\";\r\n      return state;\r\n    default:\r\n    // nothing\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { store } from \"./App.tsx\";\r\n\r\nconst Home = () => {\r\n  store.dispatch({ type: { loc: \"home\" } });\r\n\r\n  return (\r\n    <div className=\"main-home-wrapper\">\r\n      <div className=\"main-home-header\">\r\n        <pre>\r\n          <h2>안녕하십니까!</h2>\r\n          <h3>한국교통대학교 소프트웨어학과</h3>\r\n          <h3>웹 어플리케이션 동아리</h3>\r\n          <h3>f(x)입니다.</h3>\r\n        </pre>\r\n      </div>\r\n      <div className=\"main-home-content\">\r\n        <pre>\r\n          <h2>하루를 잘 보내고 계신가요?</h2>\r\n          <h3>날씨가 많이 더워지고 있습니다.</h3>\r\n          <h4>감기 조심하세요.</h4>\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const ProfilePagination = ({\r\n  maxProfileList,\r\n  totalProfile,\r\n  setCurrentPage,\r\n}) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalProfile / maxProfileList); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-profile-pagination\">\r\n      <ul\r\n        className=\"main-profile-pagination-ul\"\r\n        onClick={(e) => {\r\n          let target = e.target;\r\n          if (target.tagName === \"SPAN\") {\r\n            setCurrentPage(target.innerText);\r\n          }\r\n        }}\r\n      >\r\n        {pageNumbers.map((number) => {\r\n          return (\r\n            <li key={number}>\r\n              <span className=\"pageNumber\">{number}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePagination;\r\n","// 각각의 Profile에 대한 컴포넌트\r\n\r\nconst nav_color = [\r\n  \"#d50000\",\r\n  \"#c51162\",\r\n  \"#aa00ff\",\r\n  \"#6200ea\",\r\n  \"#304ffe\",\r\n  \"#2962ff\",\r\n  \"#0091ea\",\r\n  \"#00b8d4\",\r\n  \"#00bfa5\",\r\n  \"#00c853\",\r\n  \"#64dd17\",\r\n  \"#aeea00\",\r\n  \"#ffd600\",\r\n  \"#ffab00\",\r\n  \"#ff6d00\",\r\n];\r\n\r\nconst Profile = ({ profile }) => {\r\n  const { idx, id, name, img, start_date, end_date } = profile;\r\n  const backgroundColor = {\r\n    backgroundColor: nav_color[idx % nav_color.length],\r\n  };\r\n  return (\r\n    <div className=\"profile_box\">\r\n      <div className=\"profile_color\" style={backgroundColor}></div>\r\n      <div className=\"profile_content\">\r\n        <h2 className=\"profile_name\">{name}</h2>({id})\r\n        <div className=\"profile_date\">\r\n          <br />\r\n          가입일: {start_date}\r\n          <br />\r\n          탈퇴일: {end_date}\r\n        </div>\r\n      </div>\r\n      <img src={img} alt={img} className=\"profile_img\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","// 최대 6개의 Profile만 보여주는 페이지\r\nimport Profile from \"./Profile\";\r\n\r\nconst ProfilePage = ({ currProfileList }) => {\r\n  return (\r\n    <div className=\"main-profile-content\">\r\n      {currProfileList.map((profile) => (\r\n        <Profile profile={profile} key={profile.idx} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","export default __webpack_public_path__ + \"static/media/shine.7cfc1a2a.png\";","import { useState } from \"react\";\r\nimport { store } from \"./App.tsx\";\r\nimport ProfilePagination from \"./ProfilePagination\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport shine from \"./res/image/shine.png\";\r\n\r\nconst profileList = [\r\n  {\r\n    idx: 0,\r\n    id: \"1234567\",\r\n    name: \"김김김\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 1,\r\n    id: \"1234567\",\r\n    name: \"s\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 2,\r\n    id: \"1234567\",\r\n    name: \"a\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 3,\r\n    id: \"1234567\",\r\n    name: \"r\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 4,\r\n    id: \"1234567\",\r\n    name: \"e\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 5,\r\n    id: \"1234567\",\r\n    name: \"w\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n  {\r\n    idx: 6,\r\n    id: \"1234567\",\r\n    name: \"q\",\r\n    img: shine,\r\n    start_date: \"2021-01-01\",\r\n    end_date: \"2021-12-31\",\r\n  },\r\n];\r\n\r\nconst ProfileList = () => {\r\n  store.dispatch({ type: { loc: \"profile\" } });\r\n\r\n  // pagination 관련\r\n  const maxProfileList = 6; // 한 페이지에서 보여줄 최대 profile 개수\r\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지\r\n  // const [loading, setLoading] = useState(false); // 서버에서 ProfileList를 가져올 때 loading을 하고 있냐 아니냐\r\n  const indexOfLast = currentPage * maxProfileList; // 현재 페이지에서 있을 수 있는 마지막 index\r\n  const indexOfFirst = indexOfLast - maxProfileList; // 현재 페이지에서 있을 수 있는 처음 index\r\n  const currProfileList = (tmp) => {\r\n    // 페이지에 맞는 Profile을 보여준다.\r\n    const currProfile = tmp.slice(indexOfFirst, indexOfLast);\r\n    return currProfile;\r\n  };\r\n  // arr의 map 함수 내 _는 ele 인자를 사용하지 않겠다는 것을\r\n  // 암시적으로 나타내는 minify입니다. 일종의 convention이니,\r\n  // 익혀두시면 다음에 다른 코드를 볼 때 또 보실 일이 있을 겁니다.\r\n\r\n  return (\r\n    <div className=\"main-profile-wrapper\">\r\n      {/* {loading && <div>loading...</div>} */}\r\n      {/** 나중에 profileList를 받아올 때 대비 */}\r\n      <div>\r\n        <ProfilePage currProfileList={currProfileList(profileList)} />\r\n      </div>\r\n      <ProfilePagination\r\n        maxProfileList={maxProfileList}\r\n        totalProfile={profileList.length}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileList;\r\n","import { store } from './App.tsx';\r\n\r\nconst Introduction = () => {\r\n  store.dispatch({ type: { loc: 'introduction' } });\r\n\r\n  return (\r\n    <div className=\"main-introduction-wrapper\">\r\n      <div className=\"main-introduction-content\">\r\n        <div className=\"main-introduction-content-professor\">\r\n          <div className=\"main-introduction-content-professor-imgdiv\">\r\n            <div className=\"main-introduction-content-professor-imgdiv-innerdiv\" />\r\n          </div>\r\n          <p className=\"main-introduction-content-professor-name\">\r\n            이광 교수님\r\n          </p>\r\n          <div className=\"main-introduction-content-professor-btndiv\">\r\n            <button className=\"main-introduction-content-professor-prevbtn\">\r\n              Prev\r\n            </button>\r\n            <button className=\"main-introduction-content-professor-nextbtn\">\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"main-introduction-content-dept_software_wrapper\">\r\n          <div className=\"main-introduction-content-dept_software\">\r\n            <p className=\"main-introduction-content-dept_software-p\">\r\n              소개입니다. 웹 스크래핑 등의 방법을 이용해서,\r\n              <a href=\"https://www.ut.ac.kr/prog/professorInfo/9111202702/ceit/sub03_02_01/view.do?cntno=330&pageIndex=1\">\r\n                여기\r\n              </a>\r\n              위 주소의 교수님 정보를 얻어올 수 있습니다. 정적으로 그냥 적어놔도\r\n              됩니다만, 여러 스킬을 녹여내고 싶다면 시도해보세요. 쉬운 부분은\r\n              아닐 겁니다.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Introduction;\r\n","import { useEffect, useState } from \"react\";\r\nimport { store } from \"./App.tsx\";\r\nconst { kakao } = window;\r\n\r\nconst Location = () => {\r\n  // 충청북도 충주시 대소원면 대학로 50, 중앙정보관동 2층\r\n  const [center, setCenter] = useState([36.96911947843944, 127.8696547175743]);\r\n\r\n  useEffect(() => {\r\n    let container = document.getElementById(\"map\");\r\n    let options = {\r\n      center: new kakao.maps.LatLng(center[0], center[1]),\r\n      level: 3,\r\n    };\r\n\r\n    const map = new window.kakao.maps.Map(container, options);\r\n\r\n    // marker\r\n    let markerPosition = new kakao.maps.LatLng(center[0], center[1]);\r\n    let marker = new kakao.maps.Marker({\r\n      position: markerPosition,\r\n    });\r\n\r\n    marker.setMap(map);\r\n    var infowindow = new kakao.maps.InfoWindow({\r\n      content:\r\n        '<div style=\"width:150px;text-align:center;padding:6px 0;\">동아리방</div>',\r\n    });\r\n    infowindow.open(map, marker);\r\n\r\n    // 일반 지도와 스카이뷰로 지도 타입을 전활할 수 있는 지도 타입 컨트롤 생성\r\n    const mapTypeControl = new kakao.maps.MapTypeControl();\r\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n\r\n    // 지도 확대 축소를 제어할 수 있는 줌 컨트롤 생성\r\n    const zoomControl = new kakao.maps.ZoomControl();\r\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n    map.relayout();\r\n  }, [center]);\r\n\r\n  if (1 === false) {\r\n    console.log(setCenter());\r\n  }\r\n\r\n  store.dispatch({ type: { loc: \"location\" } });\r\n  // Google Map API는 유료이지만, Kakao API를 사용하면 무료입니다.\r\n  // 동시에 아주 간단하게 구현할 수 있습니다.\r\n  // 백엔드 단에서 로직을 구현하여 정보를 받아올지,\r\n  // 프론트엔드 단에서 로직을 구현하여 직접 띄울지 회의해보세요.\r\n  // 백엔드 단의 사람이 더 많다면 백엔드 쪽에서 위도와 경도를 얻어서\r\n  // 전달하고 프론트엔드 단에서 위도와 경도를 기반으로 위치를 보여주는 것도\r\n  // 분명히 비효율적인 방법이지만 엄연히 데이터 통신을 하는 것이므로\r\n  // 그 과정속에 REST API 통신, 외부 API 사용을 통한 CORS 등의 이해를\r\n  // 얻게 될 겁니다.\r\n  return (\r\n    <div className=\"main-location-wrapper\">\r\n      <div className=\"main-location-content\">\r\n        <div id=\"map\" className=\"main-location-map\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Location;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CommunityPagination = ({ maxPostList, totalPosts, setCurrentPage }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / maxPostList); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-community-pagination\">\r\n      <ul\r\n        className=\"main-community-pagination-ul\"\r\n        onClick={(e) => {\r\n          let target = e.target;\r\n          if (target.tagName === \"SPAN\") {\r\n            setCurrentPage(target.innerText);\r\n          }\r\n        }}\r\n      >\r\n        {pageNumbers.map((number) => {\r\n          return (\r\n            <li key={number}>\r\n              <span className=\"pageNumber\">{number}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <Link to=\"/communityWrite\" className=\"writeBtn\">\r\n        <button type=\"button\" className=\"btn btn-warning\">\r\n          등록\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityPagination;\r\n","const CommunityPostlist = ({ currPostList, history }) => {\r\n  return (\r\n    <div className=\"main-community-posts-body\">\r\n      {currPostList.map((post) => {\r\n        return (\r\n          <div className=\"post\" key={post.idx}>\r\n            <span className=\"post-idx\">{post.idx}</span>\r\n            <span\r\n              className=\"post-title\"\r\n              onClick={() => history.push(`/post?idx=${post.idx}`)}\r\n            >\r\n              {post.title}\r\n            </span>\r\n            <span className=\"post-author\">{post.author}</span>\r\n            <span className=\"post-date\">{post.date}</span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityPostlist;\r\n","import { useState } from \"react\";\r\nimport { store } from \"./App.tsx\";\r\nimport CommunityPagination from \"./CommunityPagination\";\r\nimport CommunityPostlist from \"./CommunityPostlist\";\r\n\r\nconst postList = [\r\n  {\r\n    idx: 13,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"ygjvhb\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 12,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 11,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 10,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 9,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 8,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 7,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 6,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 5,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 4,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 3,\r\n    title: \"33333332\",\r\n    content: \"123\",\r\n    author: \"SKSKSK\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 2,\r\n    title: \"22222222\",\r\n    content: \"123\",\r\n    author: \"박박박\",\r\n    date: \"2021-07-06\",\r\n  },\r\n  {\r\n    idx: 1,\r\n    title: \"1234567\",\r\n    content: \"123\",\r\n    author: \"김김김\",\r\n    date: \"2021-07-06\",\r\n  },\r\n];\r\n\r\nconst Community = ({ history }) => {\r\n  store.dispatch({ type: { loc: \"community\" } });\r\n\r\n  // 서버에 profileList를 받음.\r\n  // const [posts, setPosts] = useState([]);\r\n  // const [loading, setLoading] = useState(false); // 서버에서 PostList를 가져올 때 loading을 하고 있냐 아니냐\r\n\r\n  // pagination 관련\r\n  const maxPostList = 11; // 한 페이지에서 보여줄 최대 profile 개수\r\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지\r\n  const indexOfLast = currentPage * maxPostList; // 현재 페이지에서 있을 수 있는 마지막 index\r\n  const indexOfFirst = indexOfLast - maxPostList; // 현재 페이지에서 있을 수 있는 처음 index\r\n  const currPostList = (postList) => {\r\n    // 페이지에 맞는 Post를 보여준다.\r\n    const currPost = postList.slice(indexOfFirst, indexOfLast);\r\n    return currPost;\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-community-wrapper\">\r\n      <div className=\"main-community-content\">\r\n        <div className=\"main-community-posts-head\">\r\n          <strong>\r\n            <span className=\"main-community-posts-no\">번호</span>\r\n          </strong>\r\n          <strong>\r\n            <span className=\"main-community-posts-title\">제목</span>\r\n          </strong>\r\n          <strong>\r\n            <span className=\"main-community-posts-author\">글쓴이</span>\r\n          </strong>\r\n          <strong>\r\n            <span className=\"main-community-posts-date\">작성일</span>\r\n          </strong>\r\n        </div>\r\n        <CommunityPostlist\r\n          currPostList={currPostList(postList)}\r\n          history={history}\r\n        />\r\n      </div>\r\n      <CommunityPagination\r\n        maxPostList={maxPostList}\r\n        totalPosts={postList.length}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n","const NotFound = () => {\r\n    return (\r\n        <div>\r\n            잘못된 경로입니다.\r\n            Nav를 눌러주세요.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CommunityWrite = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const onTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const onFileChange = (e) => {\r\n    setFile(e.target.value);\r\n  };\r\n\r\n  // axios로 title, content, file을 전달한다.\r\n  // const onSubmit = (e) => {\r\n  //\r\n  // };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"write\">\r\n      <form action=\"\" method=\"post\" onSubmit={onSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlInput1\"\r\n            value={title}\r\n            onChange={onTitleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            Content\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            value={content}\r\n            onChange={onContentChange}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"formFileMultiple\" className=\"form-label\">\r\n            Files\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"file\"\r\n            id=\"formFileMultiple\"\r\n            value={file}\r\n            onChange={onFileChange}\r\n            multiple\r\n          />\r\n        </div>\r\n        <div className=\"writePageBtn\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            등록\r\n          </button>\r\n          <Link to=\"/community\" className=\"btn btn-primary\">\r\n            돌아가기\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityWrite;\r\n","import { useState } from \"react\";\r\n\r\nconst Comment = () => {\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  // axios\r\n\r\n  const onCommentSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <div>Comment</div>\r\n      {/* 조회 */}\r\n      <div>asd</div>\r\n      <form\r\n        className=\"row g-3\"\r\n        action=\"\"\r\n        method=\"post\"\r\n        onSubmit={onCommentSubmit}\r\n      >\r\n        <div className=\"col-auto\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Comment\"\r\n            value={comment}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary mb-3 col-auto\">\r\n          등록\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import { Link } from \"react-router-dom\";\r\nimport Comment from \"./Comment.js\";\r\nimport qs from \"qs\";\r\n\r\nconst Post = ({ location }) => {\r\n  const query = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true, // 문자열 맨 앞의 ?를 생략\r\n  });\r\n  const idx = query.idx;\r\n  console.log(idx);\r\n\r\n  // axios.get()로 idx를 전달하고 idx에 맞는 post를 받아온다.\r\n\r\n  const title = \"\";\r\n  const content = \"\";\r\n  const file = \"\";\r\n  return (\r\n    <div className=\"write\">\r\n      <form action=\"\" method=\"post\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlInput1\"\r\n            value={title}\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            Content\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            value={content}\r\n            disabled\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"formFileMultiple\" className=\"form-label\">\r\n            Files\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"file\"\r\n            id=\"formFileMultiple\"\r\n            value={file}\r\n            multiple\r\n            disabled\r\n          />\r\n        </div>\r\n        <Comment />\r\n        <div className=\"postBtn\">\r\n          <Link to=\"/community\" className=\"btn btn-primary \">\r\n            돌아가기\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { store } from \"./App\";\r\n// import { SERVERURL, SERVERPORT } from './Constants';\r\n// import axios from 'axios';\r\n\r\n// 백엔드와 교환할 데이터에 대한 정보를 인터페이스에 즉각 메모하세요.\r\n// 이것 또한 협업과정에서 타입스크립트가 가져다 주는 큰 장점들 중 하나입니다.\r\n// interface User { // 받는 유저 정보의 스키마\r\n\r\n// }\r\n\r\n// interface UserDTO { // 보내는 유저 정보의 스키마\r\n\r\n// }\r\n\r\nconst Login = (): JSX.Element => {\r\n  store.dispatch({ type: { loc: \"login\", loggedIn: \"\" } });\r\n\r\n  // destructuring에 따른 Typing 방법\r\n  let [id, setId]: [id: string, setId: Function] = useState(\"\");\r\n  let [pw, setPw]: [pw: string, setPw: Function] = useState(\"\");\r\n\r\n  const onIDChange = (e: any) => {\r\n    setId(e.target.value);\r\n  };\r\n  const onPwChange = (e: any) => {\r\n    setPw(e.target.value);\r\n  };\r\n  const onResetClick = () => {\r\n    setId(\"\");\r\n    setPw(\"\");\r\n  };\r\n\r\n  // 객체의 타입을 다 외울 필요 없습니다.\r\n  // 아래의 onIDChange를 예로 들면, onIDChange 이벤트가 걸려있는\r\n  // DOM에 마우스를 올려 해당 객체의 타입이 무엇인지 확인하면 쉽게 알 수 있습니다.\r\n\r\n  // axios를 이렇게 사용하는 방법도 좋지만,\r\n  // axios를 좀 더 날렵하게 custom하는 방법도 요긴하게 사용될 수 있습니다.\r\n  // 소규모 프로젝트에선 상관 없지만, 큰 프로젝트에선 DRY한 코드를 위해\r\n  // axios를 Hook처럼 커스텀하여 사용할 수 있습니다.\r\n  // const requsetUserInfo = async (UserDTO: UserDTO) => {\r\n  //     // axios를 하단 코드처럼 사용하지 않고\r\n  //     // axios({ method: 'post', ... }) 처럼 사용해도 좋습니다.\r\n  //     const res: User =\r\n  //         await axios.get(`${SERVERURL}:${SERVERPORT}`, UserDTO);\r\n  //     return res;\r\n  // }\r\n\r\n  // 패키지에 axios 설치 되어 있습니다. axios 사용하세요.\r\n  // const onSubmit = (e: React.ChangeEvent<HTMLFormElement>): void => {\r\n  //     e.preventDefault();\r\n  //     const UserDTO: UserDTO = {\r\n  //         id,\r\n  //         pw\r\n  //     }\r\n  //     const res = requsetUserInfo(UserDTO);\r\n  //     console.log(res);\r\n  // }\r\n\r\n  // 원래 submit을 하면 id와 pw이 서버로 전송됨. 서버에서 일치하는지 판단 후 res를 줌.\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"login_wrapper\">\r\n      <form action=\"\" method=\"post\" onSubmit={onSubmit}>\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"floatingInput\"\r\n            placeholder=\"ID\"\r\n            value={id}\r\n            onChange={onIDChange}\r\n          />\r\n          <label htmlFor=\"floatingInput\">ID</label>\r\n        </div>\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"floatingPassword\"\r\n            placeholder=\"Password\"\r\n            value={pw}\r\n            onChange={onPwChange}\r\n          />\r\n          <label htmlFor=\"floatingPassword\">Password</label>\r\n        </div>\r\n        <div className=\"button_wrapper\">\r\n          <button\r\n            type=\"reset\"\r\n            className=\"btn btn-primary\"\r\n            onClick={onResetClick}\r\n          >\r\n            리셋\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            로그인\r\n          </button>\r\n          <Link to=\"/signup\" className=\"btn btn-primary\">\r\n            회원가입\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RiAccountCircleFill } from \"react-icons/ri\";\r\nimport { store } from \"./App\";\r\n\r\nconst Signup = () => {\r\n  store.dispatch({ type: { loc: \"signup\" } });\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [start_date, setStartDate] = useState(\"\");\r\n  const [end_date, setEndDate] = useState(\"\");\r\n  const [img, setImg] = useState(\"\");\r\n  const [backgorundColor, setBackgroundColor] = useState(\"black\");\r\n\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onIDChange = (e) => {\r\n    setId(e.target.value);\r\n  };\r\n  const onPwChange = (e) => {\r\n    setPw(e.target.value);\r\n  };\r\n  const onBackgroundColorChange = (e) => {\r\n    setBackgroundColor(e.target.value);\r\n  };\r\n  const onStartDateChange = (e) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n  const onEndDateChange = (e) => {\r\n    setEndDate(e.target.value);\r\n  };\r\n  const onImgChange = (e) => {\r\n    setImg(e.target.value);\r\n  };\r\n  const onResetClick = () => {\r\n    setId(\"\");\r\n    setName(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    setBackgroundColor(\"black\");\r\n    setPw(\"\");\r\n    setImg(\"\");\r\n  };\r\n\r\n  const backColor = {\r\n    backgroundColor: backgorundColor,\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  var image;\r\n  if (img !== \"\") {\r\n    image = <img src={img} alt={img} className=\"signup_img\" />;\r\n  } else {\r\n    image = <RiAccountCircleFill className=\"signup_img\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"signup_wrapper\">\r\n      <form action=\"\" method=\"post\" onSubmit={onSubmit}>\r\n        Nav 색:\r\n        <input\r\n          type=\"color\"\r\n          value={backgorundColor}\r\n          onChange={onBackgroundColorChange}\r\n        />\r\n        <div>\r\n          Image:\r\n          <input\r\n            type=\"file\"\r\n            className=\"signup_setimg\"\r\n            value={img}\r\n            onChange={onImgChange}\r\n          />\r\n        </div>\r\n        <div className=\"signup_form\">\r\n          <div className=\"profile_box\">\r\n            <div className=\"profile_color\" style={backColor}></div>\r\n            <div className=\"profile_content\">\r\n              <div className=\"form-floating mb-3 signup_name\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  //   id=\"floatingInput\"\r\n                  placeholder=\"ID\"\r\n                  value={name}\r\n                  onChange={onNameChange}\r\n                />\r\n                <label htmlFor=\"floatingInput\">Name</label>\r\n              </div>\r\n              <div className=\"form-floating mb-3 signup_id\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingInput\"\r\n                  placeholder=\"ID\"\r\n                  value={id}\r\n                  onChange={onIDChange}\r\n                />\r\n                <label htmlFor=\"floatingInput\">ID</label>\r\n              </div>\r\n              <div className=\"form-floating mb-3 signup_pw\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingPassword\"\r\n                  placeholder=\"Password\"\r\n                  value={pw}\r\n                  onChange={onPwChange}\r\n                />\r\n                <label htmlFor=\"floatingPassword\">Password</label>\r\n              </div>\r\n              <div className=\"profile_date\">\r\n                <br />\r\n                가입일:\r\n                <input\r\n                  type=\"date\"\r\n                  value={start_date}\r\n                  onChange={onStartDateChange}\r\n                  className=\"input_date\"\r\n                />\r\n                <br />\r\n                탈퇴일:\r\n                <input\r\n                  type=\"date\"\r\n                  value={end_date}\r\n                  onChange={onEndDateChange}\r\n                  className=\"input_date\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {image}\r\n            <div className=\"signup_img\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"button_wrapper\">\r\n          <button\r\n            type=\"reset\"\r\n            className=\"btn btn-primary\"\r\n            onClick={onResetClick}\r\n          >\r\n            리셋\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            로그인\r\n          </button>\r\n          <Link to=\"/login\" className=\"btn btn-primary\">\r\n            돌아가기\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home.js\";\r\nimport ProfileList from \"./ProfileList.js\";\r\nimport Introduction from \"./Introduction.js\";\r\nimport Location from \"./Location.js\";\r\nimport Community from \"./Community.js\";\r\nimport NotFound from \"./NotFound.js\";\r\nimport CommunityWrite from \"./CommunityWrite.js\";\r\nimport Post from \"./Post.js\";\r\nimport Login from \"./Login.tsx\";\r\nimport Signup from \"./Signup.js\";\r\n// import React from \"react\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/fxweb\" component={Home} />\r\n      <Route exact path=\"/introduction\" component={Introduction} />\r\n      <Route exact path=\"/profile\" component={ProfileList} />\r\n      <Route exact path=\"/location\" component={Location} />\r\n      <Route exact path=\"/community\" component={Community} />\r\n      <Route exact path=\"/communityWrite\" component={CommunityWrite} />\r\n      <Route exact path=\"/post\" component={Post} />\r\n      <Route exact path=\"/login\" component={Login} />\r\n      <Route exact path=\"/signup\" component={Signup} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import \"./App.css\";\r\nimport { createStore } from \"redux\";\r\nimport Header from \"./Header.js\";\r\nimport reducer from \"./Reducer\";\r\nimport Router from \"./Router.js\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RiLoginBoxFill } from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const store = createStore(reducer);\r\n\r\nfunction App(): JSX.Element {\r\n  const [init, setInit] = useState(true);\r\n\r\n  // var login_logout_icon = <RiLoginBoxFill />;\r\n  // const loggedRender = () => {\r\n  //   const loggedState = store.getState().loggedIn;\r\n\r\n  //   login_logout_icon = loggedState ? <RiLogoutBoxRFill /> : <RiLoginBoxFill />;\r\n  // };\r\n  // // subscribe()가 사용되어야 됨.\r\n  // store.subscribe(loggedRender);\r\n\r\n  // const onLoginClicked = () => {\r\n  //   console.log(store.getState().loggedIn);\r\n  //   if (store.getState().loggedIn === false) {\r\n  //   } else {\r\n  //     store.dispatch({ type: { loc: \"\", loggedIn: \"false\" } });\r\n  //     console.log(store.getState().loggedIn);\r\n  //   }\r\n  // };\r\n\r\n  const locChanged = () => {\r\n    const { loc } = store.getState();\r\n    const App = document.querySelector(\".App\");\r\n    App!.className = \"App \" + loc;\r\n  };\r\n\r\n  const changeHandler = {\r\n    locChangeHandler: locChanged,\r\n  };\r\n\r\n  store.subscribe(changeHandler.locChangeHandler);\r\n\r\n  useEffect(() => {\r\n    /* ~~ */\r\n    setInit(false);\r\n  }, []);\r\n\r\n  const toggle_header = document.querySelector(\".toggle_header\");\r\n  const header = document.querySelector(\".header\");\r\n\r\n  toggle_header?.addEventListener(\"click\", () => {\r\n    header!.classList.toggle(\"active\");\r\n  });\r\n\r\n  return (\r\n    <div id=\"App\" className=\"App\">\r\n      <header className=\"header\">\r\n        <Header />\r\n      </header>\r\n      <main className=\"main\">{init ? \"Loading...\" : <Router />}</main>\r\n      {/* 로그인 아이콘을 보여줌. */}\r\n      <Link to=\"/login\">\r\n        <RiLoginBoxFill className=\"login_icon\" />\r\n      </Link>\r\n      <div className=\"toggle_header\">\r\n        <i className=\"fas fa-bars\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App, {store} from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  \r\n  // <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>, \r\n  // </React.StrictMode>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}